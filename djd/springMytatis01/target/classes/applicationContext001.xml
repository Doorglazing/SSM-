<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder location="classpath:druid.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
<!--    声明mybatis提供的sqlsessionFactoryBean类，这个类内部创建sqlSessionFactory的-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        set注入把数据库连接池赋给了dataSource-->
        <property name="dataSource" ref="dataSource"/>
<!--        mybatis主配置文件的位置
            configLocation 是Resource类型， 读取配置文件的
            它的赋值，使用value，指定文件的路径，使用classpath：表示文件位置-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>
    <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.lz.dao"/>
    </bean>

    <bean class="com.lz.service.impl.BuyGoodServiceImpl" id="buyService">
        <property name="sd" ref="saleDao"/>
        <property name="gd" ref="goodsDao"/>
    </bean>
</beans>